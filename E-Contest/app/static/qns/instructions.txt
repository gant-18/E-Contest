Welcome to Shaastra’s Esolang contest (that's what the 'E' stands for)! 
As the name suggests, you would have to work on the given questions using an Esoteric language. 
We have chosen THUE as the language for the this year!

-At first sight it seems to be a rudimentary language using which not many things can be achieved, but in fact
it is a Turing Complete language!
-In other words you can code whatever you’d want to in this language! Mind-boggling, isn’t it?
-However practically it cannot be deployed for any serious purpose given the fact that it is extremely
difficult to comprehend and takes time and a lot more brains to code anything useful.

***** NOTE ***** You can view this sheet whenever you want during the contest, so use your time wisely

********************************************************************
SYNTAX SHEET :
********************************************************************

-Each Thue program consists of two parts: a list of substitution rules of the form.

    <original string>::=<replacement string>

which is terminated with a line having both <original string> and <replacement string> either empty,
or consisting entirely of whitespace.

    ::=

-Input is performed using a special rule like this:

    <original string>::=:::

-Similarly, output is triggered by a line containing a rule like this:

    <original string>::=~<string to output>

*********************************************************************
GENERAL INSTRUCTIONS
*********************************************************************

**** For your ease : ASCII value of '0' is 48, 'A' is 65, 'a' is 97 and ' ' (space) is 32 ****

**** Beware of "RunTime Errors" that can arise in case you try to input a character when there is none ****

**** Unless you explicitly print a whitespace the character you output will be adjacent to the previous one without any space in between **** 

**** That also means you shouldn't print any white spaces during output unless explicitly asked to ****

**** We allow you to use an online IDE (the link is provided) for your quick checking and debugging of your program before submitting ****

**** Incase a program runs for more than 3 secs on the online IDE, press "STOP" (as it is surely due to an infinite loop only, no brainf*ck program we write now takes that much time) ****

**** You are not allowed to open any other website or webpage during the contest, the violation of which leads to disqualification ****

**** Don't press the refresh or back button during the contest; It may lead to unnecessary problems which only affects your score ****

**** Don't spam the submit button or any other button. Even if it takes time please press once and wait. Or else your submission may not be uploaded ****

**** Change between questions and solve them in any order as you wish.
Though it is arranged almost in increasing order of difficulty, it was difficult for us to decide the ordering itself! ****

**** Hope you have fun solving the questions!! Why so Serious?!! ****

*********************************************************************
EXAMPLES :
*********************************************************************

We will walk you through some basic examples just to get a taste of this lang.

Example Program 1 :

Say, INPUT IS : 34
And, we need to print : 45

The Program will be like :
 1 ,>,     Inputs '3' in cell 0; moves pointer right to cell 1; and inputs '4' into cell 1
 2 .< ++   Outputs '4'; moves pointer left to cell 0; increments value from '3' (ASCII value 51) twice to '5' (ASCII value 53)
 3 .       Outputs '5'

Of course there are a hundred more ways of doing it, you just need to get the output right.

*********************************************************************

Example Program 2 :

INPUT : A
EXPECTED OUTPUT : 0

LOGIC : Note that ASCII Value of 'A' is 65, and ASCII Value of '0' is 48. So we need to decrease the ASCII value by 27.

We can do that by two ways :
1st way (Noobs Way) :-
 1 , --------- --------- ---------   Inputs 'A' into cell 0 decrements the value 27 times (pretty sure you wouldn't have counted) 
 2 .   				     Outputs '0'

2nd way (Legends Way) :-
 1 +++ +++ +++ > ,  Increments cell 0 by 9 times so cell 0 has value 9 now (Don't know the character corresponding to ASCII value 9 :) );
 2		    moves pointer to cell 1; Inputs 'A' into it
 3 < [ -   	    Moves pointer to cell 0; Checks if the value at current cell (cell 0) is zero : 
 4	            it is 9 initially so it enters the instructions within the loop; decrements the value at cell 0 (current cell) so it becomes 8 now
 5 > --- < ] 	    Now we move to cell 1; decrement it 3 times; move back to cell 0; now we check if the current cell value is 0 : 
 6	      	    it is 8 now (not zero) so the contents within the loop execute again
 7 		    Note that as long as cell 0 is not zero the loop keeps executing
 8 		    Each time the value at cell 0 reduces by 1 and value at cell 1 reduces by 3
 9 		    So the loop gets executed 9 times (till value at cell 0 which is checked reaches 0) and cell 1 value is reduced by 3 times 9 which is 27 : 
10 		    as we needed!! 
11 .    	    Outputs the character corresponding to 65 minus 27 = 48 ASCII value which is '0'

We don't care which way you use to do the task, as long as answer is correct.

*********************************************************************

Example program 3 :
 
Remember when you had first begun your journey in learning a programming language. Whichever language you choose to learn there was one thing in common at the start! 
Be it C, C++, Python, HTML, yada yada. You'd always start off with printing "HELLO WORLD".  
We will now guide you through the same program here :) 

 1 +++++ +++               Set Cell #0 to 8
 2 [
 3     >++++               Add 4 to Cell #1; this will always set Cell #1 to 4
 4     [                   as the cell will be cleared by the loop
 5         >++             Add 4*2 to Cell #2
 6         >+++            Add 4*3 to Cell #3
 7         >+++            Add 4*3 to Cell #4
 8         >+              Add 4 to Cell #5
 9         <<<<-           Decrement the loop counter in Cell #1
10     ]                   Loop till Cell #1 is zero
11     >+                  Add 1 to Cell #2
12     >+                  Add 1 to Cell #3
13     >-                  Subtract 1 from Cell #4
14     >>+                 Add 1 to Cell #6
15     [<]                 Move back to the first zero cell you find; this will
16                         be Cell #1 which was cleared by the previous loop
17     <-                  Decrement the loop Counter in Cell #0
18 ]                       Loop till Cell #0 is zero
19 
20 The result of this is:
21 Cell No :   0   1   2   3   4   5   6
22 Contents:   0   0  72 104  88  32   8
23 Pointer :   ^
24 
25 >>.                     Cell #2 has value 72 which is 'H'
26 >---.                   Subtract 3 from Cell #3 to get 101 which is 'e'
27 +++++ ++..+++.          Likewise for 'llo' from Cell #3
28 >>.                     Cell #5 is 32 for the space
29 <-.                     Subtract 1 from Cell #4 for 87 to give a 'W'
30 <.                      Cell #3 was set to 'o' from the end of 'Hello'
31 +++.----- -.----- ---.  Cell #3 for 'rl' and 'd'
32 >>+.                    Add 1 to Cell #5 gives us an exclamation point
33 >++.                    And finally a newline from Cell #6